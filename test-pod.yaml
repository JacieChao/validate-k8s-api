apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-longhorn
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: test-longhorn
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups: ["longhorn.rancher.io"]
  resources: ["volumes", "engines", "replicas", "settings", "engineimages", "nodes"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: test-longhorn-bind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-longhorn
subjects:
- kind: ServiceAccount
  name: test-longhorn
  namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  name: volume-test
spec:
  nodeSelector:
    kubernetes.io/hostname: 172.31.17.195
  containers:
  - name: volume-test
    image: jacie/mytest:pod
    imagePullPolicy: Always
    #command: ["go", "run", "mytest.go"]
    #args: ["--testetcd=true", "--testk8s=false", "--certFile=/etc/kubernetes/ssl/kube-etcd-172-31-17-195.pem", "--keyFile=/etc/kubernetes/ssl/kube-etcd-172-31-17-195-key.pem", "--endpoints=172.31.17.195:2379"]
    #volumeMounts:
    #  - name: ssl
    #    mountPath: /etc/kubernetes/ssl
  serviceAccountName: test-longhorn
  #volumes:
  #  - name: ssl
  #    hostPath:
  #      path: /etc/kubernetes/ssl